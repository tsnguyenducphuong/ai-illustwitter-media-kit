///
/// HybridAIMediaKitSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridAIMediaKitSpec``
public protocol HybridAIMediaKitSpec_protocol: HybridObject {
  // Properties
  

  // Methods
  func createVideoFromImages(imageUris: [String], outputPath: String, fps: Double, bitrate: Double, width: Double, height: Double) throws -> Promise<String>
  func saveSkiaImage(imageData: ArrayBufferHolder, outputPath: String) throws -> Promise<String>
}

/// See ``HybridAIMediaKitSpec``
public class HybridAIMediaKitSpec_base {
  private weak var cxxWrapper: HybridAIMediaKitSpec_cxx? = nil
  public func getCxxWrapper() -> HybridAIMediaKitSpec_cxx {
  #if DEBUG
    guard self is HybridAIMediaKitSpec else {
      fatalError("`self` is not a `HybridAIMediaKitSpec`! Did you accidentally inherit from `HybridAIMediaKitSpec_base` instead of `HybridAIMediaKitSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridAIMediaKitSpec_cxx(self as! HybridAIMediaKitSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the AIMediaKit HybridObject.
 * Implement this protocol to create Swift-based instances of AIMediaKit.
 * ```swift
 * class HybridAIMediaKit : HybridAIMediaKitSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridAIMediaKitSpec = HybridAIMediaKitSpec_protocol & HybridAIMediaKitSpec_base
